[{"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/index.js":"1","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/App.js":"2","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/FindClient.js":"3","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/AddClientData.js":"4","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/AddClaim.js":"5","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/http-common.js":"6","/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/services/ClientDataService.js":"7"},{"size":329,"mtime":1643036704259,"results":"8","hashOfConfig":"9"},{"size":1010,"mtime":1643036704258,"results":"10","hashOfConfig":"9"},{"size":1995,"mtime":1643038527896,"results":"11","hashOfConfig":"9"},{"size":5861,"mtime":1643038395739,"results":"12","hashOfConfig":"9"},{"size":2747,"mtime":1643036704259,"results":"13","hashOfConfig":"9"},{"size":157,"mtime":1643036704259,"results":"14","hashOfConfig":"9"},{"size":509,"mtime":1643039283104,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3s3e6r",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/index.js",[],["33","34"],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/App.js",[],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/FindClient.js",[],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/AddClientData.js",["35","36","37","38"],"import React, { useEffect, useState } from \"react\";\nimport clientDataService from \"../services/ClientDataService\";\nimport AddClaim from \"./AddClaim\";\n\nconst AddClientData = (props) => {\n\n  let initialClientDataState = {\n    id: null,\n    firstName: \"\",\n    surName: \"\",\n    dateOfBirth: \"\",\n    state:\"TAS\",\n    landOwner:\"YES\",\n    dateOfLCA:\"\",\n    insuranceData:[]\n  };\n  const [clientData, setClientData] =  useState(initialClientDataState);\n  const [insuranceData, setInsuranceData] =  useState([]);\n  useEffect(() => { \n  if(!props.isAddFlow) {\n    setClientData(props.data); \n    setInsuranceData(props.data); \n  }\n  }, [props.data]);\n  \n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setClientData({ ...clientData, [name]: value });\n    \n  };\n\n  const handleclaimInputChange = (p) => {\n    setInsuranceData({...insuranceData,p});\n\n    let indexOfObject = 0;\n    const ind = clientData.insuranceData.filter((d, index) => {\n      console.log(p.id +\"     \" + d.id); \n      if(p.id === d.id){\n        indexOfObject = index;\n        return index;\n      }else{\n          console.log(\"Error occured\");\n      }\n    })\n\n    clientData.insuranceData[indexOfObject] = p;\n    setClientData(...clientData);\n  }\n\n  const addClaimData = (data) => {\n    clientData.insuranceData.push(data);\n    setClientData({ ...clientData });\n  }\n  const removeClaimData = (d) => {\n    let inD = clientData.insuranceData.indexOf(d);\n    const a = clientData.insuranceData.splice(inD,1);\n   setClientData({ ...clientData});\n  }\n\n  const saveClient = () => {\n    var data = {\n      ...clientData\n    };\n\n    if(props.isAddFlow) {\n    clientDataService.create(data)\n      .then(response => {\n        alert(\"Client ID ::\" + response.data.clientData.id);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    }else {\n\n      data = {\n        ...clientData, id:props.data.id\n      } \n\n      clientDataService.update(data)\n      .then(response => {\n        alert(\"Successfully Updated!!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n \n  return (\n    <>\n    \n      {(\n        <div className=\"container\">\n          <div className = \"row\">\n        <div className=\"col\"  style={{borderStyle: \"dotted\"}}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">First name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              value={clientData.firstName}\n              onChange={handleInputChange}\n              name=\"firstName\"\n            />\n            <label htmlFor=\"title\">Surname</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              value={clientData.surName}\n              onChange={handleInputChange}\n              name=\"surName\"\n            />\n            <label htmlFor=\"title\">Date of Birth</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"title\"\n              value={clientData.dateOfBirth}\n              onChange={handleInputChange}\n              name=\"dateOfBirth\"\n            />\n            <label htmlFor=\"title\">State</label>\n            <select class=\"form-select\" aria-label=\"Default select example\" selected value={clientData.state} name=\"state\" onChange={handleInputChange}>\n              <option value=\"NSW\">NSW</option>\n              <option value=\"QLD\">QLD</option>\n              <option value=\"SA\">SA</option>\n              <option value=\"TAS\">TAS</option>\n              <option value=\"VIC\">VIC</option>\n              <option value=\"WA\">WA</option>\n            </select>\n\n\n            <label htmlFor=\"title\">Land Owner</label>\n            <select class=\"form-select\" aria-label=\"Default select example\" selected value={clientData.landOwner} name=\"landOwner\" onChange={handleInputChange}>\n              <option value=\"YES\">YES</option>\n              <option value=\"NO\">NO</option>\n              <option value=\"NOT_SET\">NOT_SET</option>\n            </select>\n\n          </div>\n          <br />\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Date of LCA</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"description\"\n              selected={clientData.dateOfLCA}\n              value={clientData.dateOfLCA}\n              onChange={handleInputChange}\n              name=\"dateOfLCA\"\n\n\n            />\n          </div>\n          <br />\n          <div className=\"form-group\">\n            <button onClick={saveClient} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n            </div>\n         \n            <div className=\"col\">\n            <div className=\"row\">\n              <div className=\"col-sm\">\n              {clientData.insuranceData.length > 0 && \n                <ul class=\"list-group\">\n                \n                  <li class=\"list-group-item active\">Claim Data List</li>\n                  {clientData.insuranceData.map((d) => {\n                    return (\n                      <li class=\"list-group-item\"> {d.policyNumber} &nbsp;&nbsp;&nbsp;\n                      <button className= \"btn-sm btn-danger\" style={{float:\"right\"}} onClick={() => removeClaimData(d) }>X</button> \n                      </li>\n                    )\n                  })}\n                </ul>\n}\n              </div>\n              <div className=\"col\">\n                <AddClaim addClaimData={addClaimData} data={clientData.insuranceData} isAddFlow={props.isAddFlow} handleClaimChanges={handleclaimInputChange}></AddClaim>\n              </div>\n             \n\n            </div>\n          </div>\n\n\n\n          </div>\n\n          <br />\n\n          \n          \n          </div>\n      )}\n    \n</>\n   \n\n  );\n};\n\nexport default AddClientData;",["39","40"],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/components/AddClaim.js",[],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/http-common.js",[],"/Users/jashanpreetsingh/fire-damage/fire-damage-ui/src/services/ClientDataService.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":24,"column":6,"nodeType":"47","endLine":24,"endColumn":18,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":37,"column":11,"nodeType":"51","messageId":"52","endLine":37,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":37,"column":60,"nodeType":"55","messageId":"56","endLine":37,"endColumn":62},{"ruleId":"49","severity":1,"message":"57","line":57,"column":11,"nodeType":"51","messageId":"52","endLine":57,"endColumn":12},{"ruleId":"41","replacedBy":"58"},{"ruleId":"43","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.isAddFlow'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'ind' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'a' is assigned a value but never used.",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [props.data, props.isAddFlow]",{"range":"65","text":"66"},[627,639],"[props.data, props.isAddFlow]"]